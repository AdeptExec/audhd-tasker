services:
  # expo:
  #   build: ./app
  #   volumes:
  #     - ./app:/app
  #     - /app/node_modules
  #   environment:
  #     BASE_URL: http://localhost:8082
  #     WEB_PORT: 8082
  #     NODE_ENV: development
  #     CHOKIDAR_USEPOLLING: true
  #   ports:
  #     - "8082:8082"
  #   depends_on:
  #     - api

  api:
    env_file: 
      - ./.env/api.env
    build: ./api
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    volumes:
      - ./api:/api
      - model_cache:/root/.cache/huggingface/transformers
      - model_offload:/tmp/model_offload
    networks:
      - app-network
    dns:
      - 8.8.8.8
    deploy:
      resources:
        limits:
          memory: 7G
          cpus: '4'
        reservations:
          memory: 4G
          cpus: '2'
    environment:
      - OMP_NUM_THREADS=4
      - TOKENIZERS_PARALLELISM=true
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
    ulimits:
      memlock: -1
      stack: 67108864
    tmpfs:
      - /tmp:size=2G

  mongodb:
    image: mongo
    env_file: 
      - ./.env/mongo.env
    restart: always
    volumes:
      - audhd:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    env_file: 
      - ./.env/mexpress.env
    ports:
      - 8081:8081
    environment:
      WAIT_HOSTS: mongodb:27017
    depends_on:
      - mongodb
    networks:
      - app-network
  
  # test:
  #   build: ./api
  #   env_file:
  #     - ./.env/api.env
  #   depends_on:
  #     - mongodb
  #   volumes:
  #     - ./api:/api
  #   command: poetry run pytest tests/ -v --asyncio-mode=auto --cov=.
  #   environment:
  #     - MONGODB_URL=mongodb://mongodb:27017
  #     - PYTHONPATH=/api

volumes:
  audhd:
  model_cache:
  model_offload:

networks:
  app-network:
    driver: bridge
  